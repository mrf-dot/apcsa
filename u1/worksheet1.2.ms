\# Complete this over the weekend
.TL
Algorithms
.LP
1) Find the average of a list of numbers
.IP 1
\m[red]Declare a variable called "average"
.IP 2
Iterate through the list of numbers, adding each to the variable "average"
.IP 3
Divide the variable "average" by the length of the list
.IP 4
Print the variable "average" to standard output\m[]
.LP
2) Count how many times a number appears in a list of numbers
.IP 1
\m[red]Declare a variable called "count"
.IP 2
Declare a variable called "myNumber" that contains the number you are searching for in the list
.IP 3
Iterate through the list, adding 1 to count if the current iteration is equal to "myNumber"
.IP 4
Print the variable "count" to standard output\m[]
.LP
3) Find the minimum/maximum value in a list of numbers
.IP 1
\m[red]Declare a variable called "minimum"
.IP 2
Set minimum to the first value in the list
.IP 3
Iterate through the list, making the variable "minimum" the current iteration if the current iteration is lower than what "minimum" is
.IP 4
Print "minimum" to standard output\m[]
.LP
4) Sort a list of numbers/Sort a list of words
.IP 1
\m[red]Declare a list called "sorted"
.IP 2
Find the minimum value of the list and put it at index 0
Add a number to the list only if it is equal to or greater than the number in the previous index
.IP 3
End the loop when the length of "sorted" is equal to the length of the previous list
.IP 4
Print "sorted" to standard output\m[]
.LP
5) Search for a number in a list of numbers or a word in a list of words (unsorted list/sorted list)
.IP 1
\m[red]Declare a variable "desiredNumber" that contains the number you are searching for
.IP 2
Declare a variable "indexNumber"
.IP 3
Iterate through the list until the current iteration is equal to "desiredNumber"
.IP 4
make the value of "indexNumber" the index at which "desiredNumber" appears.
.IP 5
Print "indexNumber" to standard output
